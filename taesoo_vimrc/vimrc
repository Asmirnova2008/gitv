set nocompatible
filetype plugin on
syntax on
source $VIMRUNTIME/vimrc_example.vim
set fileencodings=utf-8

" support korean keyboard. (Toggle han/eng using \<space>)
let hangeul_enabled=1

"""""""""""""""""""""""""""""""""""""""""""""
" options
"""""""""""""""""""""""""""""""""""""""""""""
set t_Co=256
colorscheme pyte

set ignorecase
set clipboard=unnamed 
set tabstop=4
set shiftwidth=4
set noexpandtab
set tags=./TAGS
set notagbsearch
set nowrap
" code folding using indentation
set fdm=indent
set foldlevel=3

"""""""""""""""""""""""""""""""""""""""""""""
" maps
"""""""""""""""""""""""""""""""""""""""""""""
" Map toggle function to Space key. 
noremap <space> :call ToggleFold()<CR>
" Unfold all
noremap zr zR
" use ;; instead of ;
noremap ;; ;
" use ; instead of :
map ; :

" edit command-line
map q; q:
"use C-c to leave insert mode. This is the default behavior, this setting works even when
"using macros
imap <C-c> <ESC>
nmap <C-e> $
" for page up and down, use C-f and C-u instead of C-d.
nmap <C-d> :q<CR>
" in terminal, works only when "stty -ixon" is defined in .bashrc
nmap <C-s> :w<CR>
imap <C-s> <ESC>:w<CR>

"""""""""""""""""""""""""""""""""""""""""""""
" commands
" Ranger file manager
"""""""""""""""""""""""""""""""""""""""""""""
command! -nargs=0 -complete=buffer Ranger :call Ranger()
" open a file explorer selecting the current file or directory. 
command! -nargs=0 -complete=buffer F :call ExplorerFile("go")
command! -nargs=0 -complete=buffer E :Explore
command! -nargs=0 -complete=buffer Ev :Explore c:\program files\vim

set diffexpr=MyDiff()
	set diffexpr=MyDiff()
	function MyDiff()
	   let opt = ""
	   if &diffopt =~ "icase"
	     let opt = opt . "-i "
	   endif
	   if &diffopt =~ "iwhite"
	     let opt = opt . "-b "
	   endif
	   silent execute "!diff -a --binary " . opt . v:fname_in . " " . v:fname_new .
		\  " > " . v:fname_out
	endfunction

function! ExplorerFile_Remove(filename, c)
	if strpart(a:filename, strlen(a:filename)-1)==a:c
		return strpart(a:filename, 0, strlen(a:filename)-1)
	endif
	return a:filename
endfunction

" open an explorer selecting the current file or directory
function! ExplorerFile(cmd)
	if strpart(getline(2), 2, 23)=="Netrw Directory Listing"
		execute "normal c"
		let filename=getline('.')
		let filename=ExplorerFile_Remove(filename, "/")
		let filename=ExplorerFile_Remove(filename, "*")
		execute "!gitv cmd ".a:cmd." \"".filename."\"&"
	else
		let file=expand("%:p")
		let line=line('.')
		execute "!gitv cmd ".a:cmd." \"".file ."\" ".line."&"
	endif
	redraw!
endfunction

command! -nargs=0 ZR :normal zR
command! -nargs=0 Sh :ConqueTerm bash
"command! -nargs=0 -complete=buffer M :simalt ~x "maximize window
command! -nargs=1 RunL :!l <args> 


highlight Folded guifg=#606060 guibg=#090909

" Toggle fold state between closed and opened. 
" 
" If there is no fold at current line, just moves forward. 
" If it is present, reverse it's state. 
fun! ToggleFold() 
	if foldlevel('.') == 0 
		normal! l 
	else 
		if foldclosed('.') < 0 
			. foldclose 
		else 
			. foldopen 
		endif 
	endif 
	" Clear status line 
	echo 
endfun 

fun Ranger()
  silent !ranger --choosefile=/tmp/chosen
  if filereadable('/tmp/chosen')
    exec 'edit ' . system('cat /tmp/chosen')
    call system('rm /tmp/chosen')
  endif
  redraw!
endfun

if !exists('hangeul_enabled')
	finish
endif
map <leader>i i<Plug>HanMode
map <leader>a a<Plug>HanMode
map <leader>o o<Plug>HanMode
map <leader>O O<Plug>HanMode
imap <silent><leader><space> <Plug>HanMode

